<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        title="{data.name}"
        contentBackgroundColor="#2f3d39" contentBackgroundAlpha="100"
        tabBarVisible="false">

    <fx:Script><![CDATA[
        import model.Clock;
        import model.AbstractParkingSpot;
        import model.ParkingSpot;
        import model.ShopAndGoSpot;
        import model.TimeUtil;

        [Bindable]
        private var _clock:Clock;

        [Embed(source='../../../wherecaniparko/icons/48x48.png')]
        public var parko:Class;


        private function get clockIsRunning():Boolean {
            return _clock && _clock.isRunning;
        }

        override public function set data(value:Object):void {
            super.data = value;

            currentState = (data is ParkingSpot) ? "parkingSpotState" : "shopAndGoState";
        }

        private function navigateButton_clickHandler(event:MouseEvent):void {
            startNavigation();
        }

        private function startNavigation():void {
            // open navigation app and supply data
        }

        private function backButton_clickHandler(event:MouseEvent):void {
            navigator.popView();
        }

        private function startTimerButton_clickHandler(event:MouseEvent):void {
            navigateButton.enabled = false;

            if (!_clock) {
                var freeTime:uint = (data is ShopAndGoSpot) ? 1800 : 3600;
                _clock = new Clock(freeTime);
            }

            if (!_clock.isRunning) {
                _clock.start();
            }
            else {
                _clock.reset();
            }
        }

        private function formatDistance(parkingSpot:AbstractParkingSpot):String {
            var distance:Number = Math.round(data.distance * 100) / 100;

            if (distance < 1) {
                distance *= 1000;
                return distance + " m";
            }

            return distance + " Km";

        }

        private function formatReistijd(parkingSpot:AbstractParkingSpot):String {
            var distance:Number = Math.round(parkingSpot.distance * 100) / 100;
            var percent:Number = distance / 35 * 3600;
            return TimeUtil.convertToHHMMSS(Math.round(percent));

        }
        ]]>
    </fx:Script>

    <s:backgroundColor>#2f3d39</s:backgroundColor>

    <s:states>
        <s:State name="parkingSpotState"/>
        <s:State name="shopAndGoState"/>
    </s:states>

    <s:layout>
        <s:VerticalLayout paddingTop="10" paddingLeft="10" paddingBottom="10" paddingRight="10"/>
    </s:layout>

    <s:navigationContent>
        <s:Button label="&lt;" click="backButton_clickHandler(event)"/>
    </s:navigationContent>

    <s:HGroup>
        <s:VGroup>
            <s:Image source="{parko}" height="77" width="77"/>
        </s:VGroup>
        <s:VGroup>
            <s:Label text="Adres" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="26"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{(data as ParkingSpot).address}" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="26"
                     color="#FFFFFF"/>
            <s:Spacer height="10" includeIn="parkingSpotState"/>
            <s:Label text="Aantal vrije plaatsen" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="26"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{(data as ParkingSpot).numFree}" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="26"
                     color="#FFFFFF"/>
            <s:Spacer height="10" includeIn="parkingSpotState"/>
            <s:Label text="Afstand"
                     paddingLeft="5"
                     fontSize="26"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{formatDistance(data as AbstractParkingSpot)}"
                     paddingLeft="5"
                     fontSize="26"
                     color="#FFFFFF"/>
            <s:Spacer height="10"/>
            <s:Label text="Reistijd"
                     paddingLeft="5"
                     fontSize="26"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{formatReistijd(data as AbstractParkingSpot)}"
                     paddingLeft="5"
                     fontSize="26"
                     color="#FFFFFF"/>
        </s:VGroup>
    </s:HGroup>

    <s:Spacer height="100%"/>

    <s:Label textAlign="center"
             color="#ffffff"
             fontSize="50"
             text="Gratis parkeertijd:"
             visible="{_clock &amp;&amp; _clock.isRunning}"
             width="100%"/>

    <s:Label textAlign="center"
             color="#ffffff"
             fontSize="50"
             text="{_clock.timeString}"
             visible="{_clock &amp;&amp; _clock.isRunning}"
             width="100%"/>

    <s:Button id="navigateButton" width="100%" label="Navigeer naar" click="navigateButton_clickHandler(event)"/>
    <s:Button id="startTimerButton"
              width="100%"
              label="{(_clock &amp;&amp; _clock.isRunning) ? 'Ik ben terug' : 'Ik ben er'}"
              click="startTimerButton_clickHandler(event)"/>

</s:View>
