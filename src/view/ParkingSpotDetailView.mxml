<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        title="{data.name}"
        contentBackgroundColor="#2f3d39" contentBackgroundAlpha="100"
        tabBarVisible="false">

    <fx:Script><![CDATA[
        import model.Clock;
        import model.ParkingSpot;
        import model.ShopAndGoSpot;

        [Bindable]
        private var _clock:Clock = new Clock(1800);

        [Embed(source='../../../wherecaniparko/icons/48x48.png')]
        public var parko:Class;

        override public function set data(value:Object):void {
            super.data = value;

            currentState = (data is ParkingSpot) ? "parkingSpotState" : "shopAndGoState";
        }

        private function navigateButton_clickHandler(event:MouseEvent):void {
            startNavigation();

            if (data is ShopAndGoSpot) {
                startShopAndGoTimer();
            }
        }

        private function startShopAndGoTimer():void {
            // start timer that informs user of remaning time on shop and go spot.
            // alert on timer complete
        }

        private function startNavigation():void {
            // open navigation app and supply data
        }

        private function backButton_clickHandler(event:MouseEvent):void {
            navigator.popView();
        }

        private function startTimerButton_clickHandler(event:MouseEvent):void {
            navigateButton.enabled = false;

            if (!_clock.isRunning) {
                _clock.start()
            }
            else {
                _clock.reset();
            }
        }
        ]]>
    </fx:Script>

    <s:backgroundColor>#2f3d39</s:backgroundColor>

    <s:states>
        <s:State name="parkingSpotState"/>
        <s:State name="shopAndGoState"/>
    </s:states>

    <s:layout>
        <s:VerticalLayout paddingTop="10" paddingLeft="10" paddingBottom="10" paddingRight="10"/>
    </s:layout>

    <s:navigationContent>
        <s:Button label="&lt;" click="backButton_clickHandler(event)"/>
    </s:navigationContent>

    <s:HGroup>
        <s:VGroup>
            <s:Image source="{parko}" height="77" width="77"/>
        </s:VGroup>
        <s:VGroup>
            <s:Label text="Adres" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="16"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{(data as ParkingSpot).address}" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="16"
                     color="#FFFFFF"/>
            <s:Spacer height="10" includeIn="parkingSpotState"/>
            <s:Label text="Aantal vrije plaatsen" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="16"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{(data as ParkingSpot).numFree}" includeIn="parkingSpotState"
                     paddingLeft="5"
                     fontSize="16"
                     color="#FFFFFF"/>
            <s:Spacer height="10" includeIn="parkingSpotState"/>
            <s:Label text="Afstand"
                     paddingLeft="5"
                     fontSize="16"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{data.distance}"
                     paddingLeft="5"
                     fontSize="16"
                     color="#FFFFFF"/>
            <s:Spacer height="10"/>
            <s:Label text="Reistijd"
                     paddingLeft="5"
                     fontSize="16"
                     fontWeight="bold"
                     color="#FFFFFF"/>
            <s:Label text="{data.distance}"
                     paddingLeft="5"
                     fontSize="16"
                     color="#FFFFFF"/>
        </s:VGroup>
    </s:HGroup>

    <s:Spacer height="100%"/>

    <s:Button id="navigateButton" width="100%" label="Navigeer naar" click="navigateButton_clickHandler(event)"/>
    <s:Button id="startTimerButton"
              width="100%"
              label="{(_clock.isRunning) ? 'Ik ben terug' : 'Ik ben er'}"
              click="startTimerButton_clickHandler(event)"/>

    <s:Label text="{_clock.timeString}" visible="{_clock.isRunning}" width="100%"/>

</s:View>
