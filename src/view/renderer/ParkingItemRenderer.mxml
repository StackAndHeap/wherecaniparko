<?xml version="1.0"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                contentBackgroundColor="#2f3d39" contentBackgroundAlpha="1" width="100%" autoDrawBackground="false">
    <!-- To change this template use File | Settings | File Templates. -->


    <fx:Script>
		<![CDATA[
        import model.AbstractParkingSpot;
        import model.ParkingSpot;
        import model.ShopAndGoSpot;

        [Embed(source='../../../icons/icon_yes.jpg')]
        public var icon_yes:Class;

        [Embed(source='../../../icons/icon_no.jpg')]
        public var icon_no:Class;

        [Bindable]
        private var _parking:AbstractParkingSpot;

        override public function set data(value:Object):void {
            super.data = value;
            _parking = value as AbstractParkingSpot;
        }

        private function getFormattedName(parkingSpot:AbstractParkingSpot):String {
            var result:String = parkingSpot.name;

            return result;
        }

        private function getFormattedInfo(parkingSpot:AbstractParkingSpot):String {
            var result:String = "";
            if (parkingSpot is ShopAndGoSpot) {
                result += "plaats nr " + ShopAndGoSpot(parkingSpot).bayNumber + "";
            } else {
                if (ParkingSpot(parkingSpot).isFree) {
                    result += ParkingSpot(parkingSpot).numFree + " plaatsen vrij";
                }
                else {
                    result += "volzet"
                }
            }
            return result;
        }

        private function formatDistance(parkingSpot:AbstractParkingSpot):String {
            var distance:Number = Math.round(data.distance * 100) / 100;

            if (distance < 1) {
                distance *= 1000;
                return distance + " m";
            }

            return distance + " Km";

        }
        ]]>
	</fx:Script>

    <s:HGroup contentBackgroundColor="#2f3d39" contentBackgroundAlpha="100"
              verticalAlign="middle" width="100%" height="78">

        <s:Spacer width="5"/>
        <s:Image id="iconYes" width="32" height="32" visible="{_parking.isFree}" includeInLayout="{_parking.isFree}"
                 source="{icon_yes}"/>
        <s:Image id="iconNo" width="32" height="32" visible="{!_parking.isFree}" includeInLayout="{!_parking.isFree}"
                 source="{icon_no}"/>
        <s:VGroup width="100%">
            <s:Label width="100%"
                     backgroundColor="#2f3d39"
                     text="{getFormattedName(_parking as AbstractParkingSpot)}"
                     paddingLeft="5"
                     fontSize="26"
                     fontWeight="bold"
                     color="#FFFFFF"/>

            <s:Label width="100%"
                     backgroundColor="#2f3d39"
                     text="{getFormattedInfo(_parking as AbstractParkingSpot)}"
                     paddingLeft="5"
                     fontSize="26"
                     color="#FFFFFF"/>
        </s:VGroup>

        <s:Label id="distanceLabel" color="#FFFFFF" paddingRight="15" fontSize="26"
                 text="{formatDistance(_parking)}"/>
    </s:HGroup>
</s:ItemRenderer>
